import cv2
import os

# Input directory
input_directory = '/home/Student/s4582342/LSE/val/MSSL_VAL_SET_VIDEOS'

# Output path to write subvideos
output_directory = '/home/Student/s4582342/LSE/val_new'

# Define the number of frames per subvideo
frames_per_subvideo = 150

# Iterate through each video sample in input directory and create 150 frame partitions
# Generated by OpenAI's ChatGPT
for root, _, video_files in os.walk(input_directory):
    for video_filename in video_files:
        video_path = os.path.join(root, video_filename)
        video_name, video_extension = os.path.splitext(video_filename)

        # Open the input video file
        cap = cv2.VideoCapture(video_path)

        if not cap.isOpened():
            print("Error: Unable to open input video file:", video_filename)
            continue

        frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
        frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
        frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
        fps = int(cap.get(cv2.CAP_PROP_FPS))

        subvideo_count = frame_count // frames_per_subvideo

        # Read and write subvideos
        for subvideo_index in range(subvideo_count):
            subvideo_frames = []

            for frame_index in range(frames_per_subvideo):
                ret, frame = cap.read()

                if not ret:
                    break

                subvideo_frames.append(frame)

            if subvideo_frames:
                subvideo_filename = f"{video_name}_{subvideo_index + 1}{video_extension}"
                subvideo_path = os.path.join(output_directory, subvideo_filename)

                fourcc = cv2.VideoWriter_fourcc(*'mp4v')
                out = cv2.VideoWriter(subvideo_path, fourcc, fps, (frame_width, frame_height))

                for frame in subvideo_frames:
                    out.write(frame)

                out.release()

        # Release the input video
        cap.release()

print("Subvideos have been created and saved in the output directory:", output_directory)
